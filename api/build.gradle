plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.jreleaser' version '1.17.0'
}

group = "io.github.freshsupasulley.censorcraft"
version = api_version
description = 'CensorCraft API'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'com.electronwill.night-config:core:[1.0,)'
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            
	        pom {
	            // Apparently you need to do this because it doesn't get autofilled (at least for description)
	            name = project.name
	            description = project.description
	            url = 'https://github.com/FreshSupaSulley/CensorCraft'
	            
	            licenses {
	                license {
	                    name = 'MIT License'
	                    url = 'https://opensource.org/license/mit'
	                }
	            }
	            
	            developers {
	                developer {
	                    name = 'Erich Boschert'
	                }
	            }
	            
	            scm {
	                connection = 'scm:git:https://github.com/FreshSupaSulley/whisper-jni.git'
	                developerConnection = 'scm:git:ssh://github.com/FreshSupaSulley/whisper-jni.git'
	                url = 'https://github.com/FreshSupaSulley/whisper-jni'
	            }
	        }
	    }
    }
    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
    }
    
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                    
                    // Double the retry delay as publishing takes a long time
                    // Alternatively you can set JRELEASER_MAVENCENTRAL_STAGE: UPLOAD and manually publish
                    retryDelay = 40
                }
            }
        }
    }
}

// Because we're using a subproject, jreleaser freaks tf out and we need to call publish first
task jreleaserDeployWrapper {
	group = 'publishing'
	description = 'Convenience method to publish to maven central'
	
	dependsOn publish
	finalizedBy 'jreleaserDeploy'
}

